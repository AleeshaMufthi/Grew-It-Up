
<%- include('../layout/adminHeader.ejs') %>

<form action="/admin/addproduct" method="post" enctype="multipart/form-data" id="product-form" onsubmit="return validationChecking()">

        <section class="content-main">
            <div class="row">
                <div class="col-12">
                    <div class="content-header">
                        <h2 class="content-title">Add New Product</h2>
                        <div>
                            <a href='/admin/prdoucts'> <button
                                    class="btn btn-light rounded font-sm mr-5 text-body hover-up">cancel</button></a>
                                    <input type="submit" class="btn btn-md rounded font-sm hover-up" value="Upload">
                                    <div id="invalid">
                                        <% if (typeof error !=='undefined' && error) { %>
                                            <p class="text-danger" id="message">
                                                <%= error %>
                                            </p>
                                            <% } %>
                                            
                                    </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-9">
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="mb-4">
                                <label for="product_title" class="form-label">Product title</label>
                                <input type="text" placeholder="Type here" name="name" class="form-control"
                                    id="product_title">
                                    
                                <div class="error-message" style="color: red;" id="product_title-error"></div>

                            </div>
                            <div class="row gx-3">
                            
                                <div class="col-md-6  mb-3">
                                    <label for="inputPassword4" class="form-label">category</label>
                                    <select name="category" class="form-control" id="product_category">
                                        <option value="" disabled selected>Select a Category
                                        </option>
                                        <% categories.forEach(category=> { 
                                            
                                            if (category.is_listed) {
                                                %>
                                              
                                              <option value="<%= category._id %>">
                                                  <%= category.name %>
                                              </option>
  
                                              <%
                                            }
                                         }); %>


                                      
                                    </select>
                                
                                    <div class="error-message" style="color: red;" id="product_category-error"></div>
                                </div>



                            </div>


                        </div>
                    </div> <!-- card end// -->
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="row gx-3">
                                <div class="col-md-4">
                                    <label for="inputPrice" class="form-label">price</label>
                                    <input type="text" class="form-control" name="price"
                                        placeholder="enter the price" id="product_price">
                                    <div class="error-message" style="color: red;" id="product_price-error"></div>
                                </div>

                                <div class="col-md-4">
                                    <label for="inputPrice" class="form-label">Quantity</label>
                                                    <input type="text" class="form-control" name="quantity"
                                                        placeholder="enter the quantity of product" id="quantity">
                                                    <div class="error-message" style="color: red;" id=""></div>
                                </div>

                            </div>




                            <div>
                                <label class="form-label">Description</label>
                                <textarea placeholder="Type here" name="description" class="form-control"
                                    rows="4" id="description"></textarea>
                                <div class="error-message" style="color: red;" id="description-error"></div>

                            </div>
                        </div>
                    </div> <!-- card end// -->

                </div>
               

                <div class="col-lg-3">
                    <div class="card mb-4">
  <div class="card-header">
      <h4>Media</h4>
  </div>
  <div class="card-body">
      <div class="input-upload">
          <img src="/assetsb/imgs/theme/upload.svg" alt="">
          <div id="imagePreview" class="image-preview"></div>
          <input  name="images" id="imageInput" class="form-control" type="file" accept="image/*" multiple>
      </div>
  </div>
  <script>
      const imgPreview = document.getElementById('imagePreview');
      const inputField = document.getElementById('imageInput');
  
      inputField.addEventListener('change', function(event) {
          const files = event.target.files;
          imgPreview.innerHTML = ''; // Clear the previous preview images
  
          for (let i = 0; i < files.length; i++) {
              const file = files[i];
              const reader = new FileReader();
  
              reader.onload = function(e) {
                  const img = document.createElement('img');
                  img.src = e.target.result;
                  img.style.maxWidth = '100px'; // Set max width for the preview image
  
                  const deleteBtn = document.createElement('button');
                  deleteBtn.innerText = 'X';
                  deleteBtn.style.borderRadius = '100%'; // Makes the button round
                  deleteBtn.style.backgroundColor = 'red'; // Sets the background color to red
                  deleteBtn.style.color = 'white'; // Sets the text color to white
                  deleteBtn.style.border = 'none'; // Removes the button border
                  deleteBtn.style.padding = '5px 10px'; // Adjusts padding for better appearance
                  deleteBtn.addEventListener('click', function() {
                      img.parentNode.removeChild(img); // Remove the image element
                      deleteBtn.parentNode.removeChild(deleteBtn);
                      removeAndReconstructInput(file); // Remove the file and reconstruct the input field
                  });
  
                  const container = document.createElement('div');
                  container.appendChild(img);
                  container.appendChild(deleteBtn);
                  imgPreview.appendChild(container); // Append the new image preview with delete button
              };
  
              reader.readAsDataURL(file);
          }
      });
  
      function removeAndReconstructInput(fileToRemove) {
          const index = Array.from(inputField.files).findIndex(file => file === fileToRemove);
          if (index !== -1) {
              removeFileFromFileList(index); // Call the removeFileFromFileList function passing the index
          }
      }
  
      function removeFileFromFileList(index) {
          const dt = new DataTransfer();
          const files = inputField.files;
  
          for (let i = 0; i < files.length; i++) {
              if (index !== i) {
                  const file = files[i];
                  dt.items.add(file); // Exclude the file based on the provided index
              }
          }
  
          inputField.files = dt.files; // Assign the updated file list to the input field
      }
  </script>
  
      
</div>
                      
                        </div>











                <div id="invalid">
                    <% if (typeof message !=='undefined' && message) { %>
                        <p style="color: rgb(8, 96, 0);" id="message">
                            <%= message %>
                        </p>
                        <% } %>
                                      
                </div>
            </div> <!-- card end// -->
            </div>

            </div>
        </section>
    </form>



    <script>

    function validationChecking() {
        const product_title = document.getElementById("product_title").value;
        const description = document.getElementById("description").value;
        const product_price = document.getElementById("product_price").value;
        const product_category = document.querySelector('select[name="category"]').value;
      
        const product_title_error = document.getElementById("product_title-error");
        const description_error = document.getElementById("description-error");
        const product_price_error= document.getElementById("product_price-error");
        const product_category_error = document.getElementById("product_category-error");
       
        product_title_error.innerHTML = product_title.trim() === "" ? "Please enter product name" : "";
    description_error.innerHTML = description.trim() === "" ? "Please enter product description" : "";
    
    // Check if product_price is not a number or if it's less than or equal to 0
    product_price_error.innerHTML = isNaN(product_price) || product_price.trim() === "" || parseFloat(product_price) <= 0 ? "Please enter a valid price (greater than 0)" : "";
    
    product_category_error.innerHTML = product_category === '' ? "Please enter product category" : "";
         
    return !(product_title.trim() === "" || description.trim() === "" || product_price.trim() === ""||product_category.trim() === "");
    }

    

        


 
    </script>

    


<%- include('../layout/adminFooter.ejs') %>